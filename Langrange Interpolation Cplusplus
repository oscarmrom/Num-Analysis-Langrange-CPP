#include <iostream>

using namespace std;

int main()
{
	char stop = 'n';

	double tableInputs[4][2];											//Table for inputs
	double tableLinAnswers[4];											//Table to store answers of Li,n(x)
	double valueX, x0, x1, x2, x3, y0, y1, y2, y3;						//Variables for ease of equation coding
	double Pnx;															//Final equation Pn(x) answer

	//Take the inputs of xi and yi data
	for (int i = 0; i < 4; i++)
	{
		for (int j = 0; j < 2; j++)
		{
			if (j == 0) 
			{
				cout << "x" << i << " = ";
				cin >> tableInputs[i][j];
				cout << endl;
			}
			else if (j == 1)
			{
				cout << "y" << i << " = ";
				cin >> tableInputs[i][j];
				cout << endl;
			}
		}
	}

	/*
		for (int i = 0; i < 4; i++)
	{
		for (int j = 0; j < 2; j++)
		{
			if (j == 0)
			{
				cout << "x" << i << " = " << tableInputs[i][j] << endl;
			}
			else if (j == 1)
			{
				cout << "y" << i << " = " << tableInputs[i][j] << endl;

			}
		}
	}
	*/
	
	//Set variables equal to user input for equation code simplicity
	x0 = tableInputs[0][0];
	x1 = tableInputs[1][0];
	x2 = tableInputs[2][0];
	x3 = tableInputs[3][0];
	
	y0 = tableInputs[0][1];
	y1 = tableInputs[1][1];
	y2 = tableInputs[2][1];
	y3 = tableInputs[3][1];

	//Ask user for variable x we are looking to interpolate
	cout << "\nWhat is the value of x you want to find the y for?\n";
	cin >> valueX;
	cout << endl;

	//set the answer for each Li,n(x)
	tableLinAnswers[0] = ((valueX - x1) * (valueX - x2) * (valueX - x3)) / ((x0 - x1) * (x0 - x2) * (x0 - x3));
	tableLinAnswers[1] = ((valueX - x0) * (valueX - x2) * (valueX - x3)) / ((x1 - x0) * (x1 - x2) * (x1 - x3));
	tableLinAnswers[2] = ((valueX - x0) * (valueX - x1) * (valueX - x3)) / ((x2 - x0) * (x2 - x1) * (x2 - x3));
	tableLinAnswers[3] = ((valueX - x0) * (valueX - x1) * (valueX - x2)) / ((x3 - x0) * (x3 - x1) * (x3 - x2));

	//Show the answers acquired for each Li,n(x)
	cout << "L0,3 = " << tableLinAnswers[0] << endl;
	cout << "L1,3 = " << tableLinAnswers[1] << endl;
	cout << "L2,3 = " << tableLinAnswers[2] << endl;
	cout << "L3,3 = " << tableLinAnswers[3] << endl << endl;

	//Show the what each separate equation answer is once in the format of yi * Li,n(x)
	cout << "y0 (l0,3(x)) = " << (y0 * tableLinAnswers[0]) << endl;
	cout << "y1 (l1,3(x)) = " << (y1 * tableLinAnswers[1]) << endl;
	cout << "y2 (l2,3(x)) = " << (y2 * tableLinAnswers[2]) << endl;
	cout << "y3 (l3,3(x)) = " << (y3 * tableLinAnswers[3]) << endl << endl;

	//Calculate final Pn(x)
	Pnx = (y0 * tableLinAnswers[0]) + (y1 * tableLinAnswers[1]) + (y2 * tableLinAnswers[2]) + (y3 * tableLinAnswers[3]);
	
	cout << "\nThe P3(" << valueX << ") = " << Pnx << endl;

	//Just to pause at the end
	do 
	{
		cout << "\nDo you wish to close program?\n";

		cin >> stop;
	} while (stop != 'y');

	if (stop == 'y')
	{
		return 0;
	}
}
